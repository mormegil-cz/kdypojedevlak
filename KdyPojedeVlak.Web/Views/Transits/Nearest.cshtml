@using System.Globalization
@using KdyPojedeVlak.Web.Helpers
@using KdyPojedeVlak.Web.Models
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model KdyPojedeVlak.Web.Models.NearestTransits
@{
    ViewData["Title"] = $"Nejbližší vlaky v „{Model.Point.Name}“";
    var now = Model.StartDate.TimeOfDay;
    var hasTools = false;

    string StrFrom(string name) => (name.Length == 0 || Char.ToUpperInvariant(name[0]) == 'Z' || Char.ToUpperInvariant(name[0]) == 'S' ? "ze " : "z ") + name;
}
<h3>Nejbližší průjezdy vlaku místem „@Model.Point.Name“</h3>
<div class="row">
    <div class="col-md-11">
    </div>
    <div class="col-md-1">
        <div class="btn-group">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Nástroje <span class="caret"></span>
            </button>
            <ul class="dropdown-menu">
                @if (Model.Point.Latitude != null)
                {
                    hasTools = true;
                    var lat = Model.Point.Latitude.GetValueOrDefault().ToString("F5", CultureInfo.InvariantCulture);
                    var lon = Model.Point.Longitude.GetValueOrDefault().ToString("F5", CultureInfo.InvariantCulture);
                    <li>
                        <a href="https://www.openstreetmap.org/?mlat=@lat&mlon=@lon#map=15/@lat/@lon">Poloha tohoto místa</a>
                    </li>
                }
                @if (Model.Point.WikidataItem != null)
                {
                    hasTools = true;
                    <li>
                        <a href="https://www.wikidata.org/wiki/@(Model.Point.WikidataItem)">Místo na Wikidatech</a>
                    </li>
                }
                @if (Model.Point.CountryCodeFromId == "CZ")
                {
                    hasTools = true;
                    <li>
                        <a href="https://www.cd.cz/stanice/54@(Model.Point.ShortCzechIdentifier)">Detail stanice ČD</a>
                    </li>
                    <li>
                        <a href="http://provoz.szdc.cz/tabule/StationDetail.aspx?lang=cs&id=54@(Model.Point.ShortCzechIdentifier)&t=1">Tabule příjezdů</a>
                    </li>
                    <li>
                        <a href="http://provoz.szdc.cz/tabule/StationDetail.aspx?lang=cs&id=54@(Model.Point.ShortCzechIdentifier)&t=2">Tabule odjezdů</a>
                    </li>
                }
                @if (hasTools)
                {
                    <li role="separator" class="divider"></li>
                }
                <li>
                    <a href="https://www.facebook.com/sharer/sharer.php?u=http://kdypojedevlak.cz@(Url.Action("Nearest", new { id = Model.Point.Code }))">Sdílet na Facebook</a>
                </li>
            </ul>
        </div>
    </div>
</div>

<form class="form-inline">
    <div class="form-group">
        <label for="at">Datum/čas:</label>
        <input type="datetime" class="form-control click-prefill" id="at" name="at" placeholder="@Model.StartDate.ToString("s")"/>
    </div>
    <button type="submit" class="btn btn-default">Aktualizovat</button>
</form>

<ul>
    @foreach (var train in Model.Transits)
    {
        <li class="@(train.AnyScheduledTime < now ? "past" : "future")">
            @train.AnyScheduledTimeOfDay
            @Html.ActionLink(DisplayConsts.TrainCategoryNames[train.TrainCategory] + " " + train.TrainNumber + " " + train.TrainName,
                "Details", "Train",
                new
                {
                    id = train.TrainNumber,
                    year = Model.CurrentTimetableYear == train.TimetableYear ? null : train.TimetableYear.ToString(CultureInfo.InvariantCulture)
                })
            @{
                var descriptionPieces = new List<string>();
                if (!String.IsNullOrEmpty(train.SubsidiaryLocationDescription))
                {
                    descriptionPieces.Add(train.SubsidiaryLocationDescription);
                }
                if (train.PreviousPointName != null)
                {
                    if (train.NextPointName != null)
                    {
                        descriptionPieces.Add($"{train.PreviousPointName} → {train.NextPointName}");
                    }
                    else
                    {
                        descriptionPieces.Add(StrFrom(train.PreviousPointName));
                    }
                }
                else
                {
                    descriptionPieces.Add($"směr {train.NextPointName}");
                }
                if (train.DwellTime != null)
                {
                    descriptionPieces.Add(TimeSpan.FromMinutes((double)train.DwellTime.GetValueOrDefault()).MinutesToString());
                }
                <text>(@String.Join("; ", descriptionPieces))</text>
            }
        </li>
    }
</ul>

<h4>Sousední místa</h4>
<ul>
    @foreach (var neighbor in Model.NeighboringPoints)
    {
        <li>
            @Html.ActionLink(neighbor.Name, "Nearest", new { id = neighbor.Code }, null)
        </li>
    }
</ul>

@if (Model.NearestPoints != null)
{
    <h4>Další okolní místa</h4>
    <ul>
        @foreach (var neighbor in Model.NearestPoints)
        {
            <li>
                @Html.ActionLink(neighbor.Name, "Nearest", new { id = neighbor.Code }, null)
            </li>
        }
    </ul>
}